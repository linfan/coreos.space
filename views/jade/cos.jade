doctype html
html
    head
        include inc/header
        script(type='text/javascript', src='download.js')
    body
        .banner-mini
            .container
                include inc/navigator
        .container
            .about-grids
                h3 希云COS产品介绍
                .about-grid
                    p
                        | 希云平台开发的COS系统是基于CoreOS定制的一款企业级私有云集群系统，本站提供了COS系统v1.0版本的镜像和安装说明，下载地址请点击：
                        a(href='http://pan.baidu.com/s/1gdQDshd') COS
                    h4 1、公司简介
                    p
                        | 云栈科技（北京）有限公司于2013年年底在北京市海淀区注册成立，是国内最早研究和应用容器和Docker相关技术的技术企业。
                        br
                        | 云栈公司发展目标是建立以希云为品牌的全方位Docker相关产品，包括希云集装箱一体机、COS集装箱操作系统、希云cSphere Docker管理平台以及希云微镜像。
                        | 此外,公司还提供Docker相关的培训和咨询方案：培训主要面向企业现场培训，帮助企业的技术员工系统掌握Docker技术；咨询方案则是结合企业某项具体业务Docker化希望达成的目标，提供整体的咨询建议和解决方案。
                        br
                        | 为企业转型互联网提供技术引擎和服务保障，一直是云栈的追求！
                    h4 2、产品简介
                    p
                        | COS是一个专为运行容器设计和开发的操作系统。它提供容器安全防护、内置网络管理和服务发现系统，并提供操作系统级别的整体回滚能力。
                        | COS是cSphere企业版的核心，通过COS，企业可以避免在网络、存储、软件版本适配等方面的大量的兼容性问题。
                    h4 3、技术需求
                    p
                        | 长期以来，传统的服务器操作系统，包括大多数Linux发行版，太过臃肿庞杂，更新发布缓慢且僵化。
                        | 每隔2-3年，开发者会不断用安全补丁和更新完善这个系统，但是通常不能进行特别大的改动，直到下一个大的发行版发布。
                        br
                        | 在这之前，操作系统的管理员通常只能在某个版本的操作系统上面配置系统环境，之后再去部署相关业务的应用程序。
                        | 应用程序的更新通常和需要特定的操作系统版本和运行环境，更新过程痛苦而复杂。
                        | 而当操作系统暴露出一些漏洞，全世界的运维人员就都赶紧忙着给服务器打补丁，因为现在最普遍被攻击的原因是使用的软件没有更新。
                        | 但是传统操作系统的更新往往更加困难，因为往往存储系统，网络，配置信息以及运行的各种应用都会掣肘操作系统的更新。
                        br
                        | 随着容器技术，特别是Docker的兴起，专门面向容器的超级精简且只满足最低限度需求的COS系统也应运而生。由于容器的出现大大降低操作系统和应用程序的耦合度，因此COS就是为了专门为了基于容器的部署而修改的。
                        | COS对系统做了最大的精简，所有附加的功能都被剔除了，没有任何额外的点缀性内容，并通过Docker将操作系统和应用程序做了完全的分离。
                        | COS的核心思想是降低操作系统和应用程序的耦合度，以更低的自身体积实现更高功能密度以及更出色的安全性水平，从另一种方式来看，由更低自身体积带来更少复杂性元素、更少安全漏洞、更低补丁需求、更少重启次数以及更短的启动时间等等。
                    h4 4、产品功能
                    p
                        b 4.1 容器管理
                        br
                        COS 是一个容器化操作系统，内置Docker 向应用程序提供容器化环境。除了Docker对容器的常规管理功能之外，还可以为Docker创建的容器指定IP地址，从而实现跨主机和其他COS上的容器进行网络通讯。
                        | 除此之外，由于内置了基于域名的服务发现功能，容器之间还可以直接通过为容器创建的名字进行网络通讯。
                        br
                        img.cosImg(src='/cos1.png', style="max-width: 100%;")
                        br
                        img.cosImg(src='/cos2.png', style="max-width: 100%;")
                        br
                        b 4.2 自动升级
                        br
                        COS 在每次升级时都会将整个系统（包括内核和内置的应用程序）升级更新到一个最新的状态。COS会不定期与更新服务器进行交互，查找更新并自动下载可用的更新，这个过程中，被更新的机器不需要从负载集群中移除。
                        | 同时在这个过程中，为了保证不影响其上运行的应用程序，COS还会通过cgroups限制更新过程中的硬盘和网络I/O。
                        br
                        img.cosImg(src='/cos3.png', style="max-width: 100%;")
                        br
                        b 4.3 集群支持
                        br
                        | COS 在安装后就自动加入到集群中，内置的etcd通过raft 共识算法把分散在数据中心的各个COS操作系统连接起来，成为一个集群整体。
                        | 集群中的每个COS系统都可以通过etcd共享和发布配置或状态信息，无论从集群中的那个节点，所获取的信息都是一致的。
                        br
                        img.cosImg(src='/cos4.png', style="max-width: 100%;")
                        br
                        img.cosImg(src='/cos5.png', style="max-width: 100%;")
                    h4 5、产品特性
                    p
                        b 5.1 极致精简
                        br
                        | COS专门为运行容器而设计，非常小巧而精简，整个系统只有400M左右大小，除了除了一些标准的默认程序之外，COS没有任何多余的软件。
                        | 高度定制专一化的COS有更少的安全漏洞，更快的启动速度，从而也使得快速高频的系统更新成为可能。
                        br
                        img.cosImg(src='/cos6.png', style="max-width: 100%;")
                        br
                        b 5.2 无缝升级
                        br
                        | COS采用可回滚的双分区更新模式，可实现自动无缝的系统更新。在COS中 有2个系统分区，平时只有一个系统分区是活动的，另一个系统分区用来自动更新。
                        | 而且活动的系统分区始终是只读挂载的，因此当升级完成时，只需要将 两个系统分区角色切换即可。假如更新后的系统出现问题，还可以快速切换回原来的系统保证使用。
                        | COS因此可以不断地进行小步快跑式的更新，从而保证系统总是处于最新版本的状态，以此提升系统稳定性和安全性。
                        br
                        b 5.3 功能强大的容器管理
                        br
                        | COS内置了Docker来进行容器管理，所有的应用程序均以Docker容器的方式运行在COS中。除此以外，COS中的容器还额外增加了网络管理和名字服务的功能，
                        | 管理员可以为Docker创建的容器指定IP地址，从而实现跨主机的容器间网络通讯，同时还提供基于名字服务的服务发现，因此在COS上还可以实现容器的动态伸缩。
                        br
                        b 5.4 天生的集群
                        br
                        | COS从安装起就自动加入到集群当中，每个COS都可以通过本机的etcd读取或发布配置信息或状态信息，从而实现信息共享和服务发现功能。
                        | Etcd基于非常著名的Raft一致性算法，通过选举形式在服务器之中选举Leader来同步数据，并以此确保集群之内信息始终一致和可用。

        include inc/footer